@{
    ViewData["Title"] = "movies & structure";
}

<script src="~/scripts/buildscatter.js"></script>

<div id="chartDiv">
</div>

<script>

/*
 * to filter the data after 2011 year
 */
function filterData(data)
{
    // both 1st & last movies have high revenue
    return data.filter(d => {
        return( 
            //d.release_year < 2011 &&      // before 2011    - last movie
            d.release_year > 2001 &&      // after 2001     - after initial movie
            d.title
        );
    });
}

/*
 * prepare data for chart, reduce fields and
 * provide a key
 *
 * http://devdocs.io
 */
function prepareBarChartData(data) 
{
  // sort by budget this time
  var dataMap = data.sort(
                        (a, b) => b.budget - a.budget                           // highest budget first
                    )
                    .filter(
                        (d, i) => i < 100                                       // first 100 films
                    )
                ;

    // DEBUG
    console.log("dataMap", dataMap);

    //debugger;  // uncomment this line to effectively pause at this point (useful js debug line)

  return dataMap;
}

/*
 * convert fields in csv to js objects
 */
function csvConvert(d)
{
     return {
                id: +d.id,                          // + means convert to number
                title: d.title,                     // default, keep as string
                release_year: +d.release_year,      // year as number (not date in csv)
                genre: d.genre,
                runtime: +d.runtime,                // minutes as number
                budget: +d.budget,
                revenue: +d.revenue
            };
}

/*
 * once data is loaded, run a few tasks, like c++ main()
 */
function dataLoaded(loadedData)
{    
    console.log("pre filter: ", loadedData);
    var cleanData = filterData(loadedData);
    console.log("filtered: ", cleanData);

    // 
    var barChartData = prepareBarChartData(cleanData);

   //debugger; 

    buildChart(
        barChartData
    );
}

/* CSV file */
        d3.csv("../data/harry_potter.csv", csvConvert)
          .then(result => {
              dataLoaded(result)     
          })
        ;

</script>

<div>
    generate scatter chart using revenue fields, previous data from data prep<br />
    - 
</div>